/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.student.api;

import com.student.model.Course;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-10-19T13:56:16.618Z")

@Api(value = "course", description = "the course API")
public interface CourseApi {

    @ApiOperation(value = "Add new course", nickname = "addCourse", notes = "", tags={ "course", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/course",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addCourse(@ApiParam(value = "Course object that need to be added to database" ,required=true )  @Valid @RequestBody Course body);


    @ApiOperation(value = "CourseId to delete", nickname = "deleteCourse", notes = "", tags={ "course", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid Id supplied"),
        @ApiResponse(code = 404, message = "Course not found") })
    @RequestMapping(value = "/course/{courseId}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteCourse(@ApiParam(value = "courseId to delete",required=true) @PathVariable("courseId") Long courseId);


    @ApiOperation(value = "get course details by Id", nickname = "getCourseDetailsById", notes = "", tags={ "course", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/course/{courseId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Void> getCourseDetailsById(@ApiParam(value = "ID of course that needs to be fetched",required=true) @PathVariable("courseId") Long courseId);

}
